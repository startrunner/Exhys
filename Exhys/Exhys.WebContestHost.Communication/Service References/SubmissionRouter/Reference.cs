//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Exhys.WebContestHost.Communication.SubmissionRouter {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SubmissionRouter.ISubmissionService", CallbackContract=typeof(Exhys.WebContestHost.Communication.SubmissionRouter.ISubmissionServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface ISubmissionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubmissionService/Submit", ReplyAction="http://tempuri.org/ISubmissionService/SubmitResponse")]
        System.Guid Submit(Exhys.SubmissionRouter.Dtos.SubmissionDto submission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubmissionService/Submit", ReplyAction="http://tempuri.org/ISubmissionService/SubmitResponse")]
        System.Threading.Tasks.Task<System.Guid> SubmitAsync(Exhys.SubmissionRouter.Dtos.SubmissionDto submission);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISubmissionService/Ping")]
        void Ping();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISubmissionService/Ping")]
        System.Threading.Tasks.Task PingAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISubmissionServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISubmissionService/SubmissionProcessed")]
        void SubmissionProcessed(Exhys.SubmissionRouter.Dtos.SubmissionResultDto result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISubmissionService/Pong")]
        void Pong();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISubmissionServiceChannel : Exhys.WebContestHost.Communication.SubmissionRouter.ISubmissionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubmissionServiceClient : System.ServiceModel.DuplexClientBase<Exhys.WebContestHost.Communication.SubmissionRouter.ISubmissionService>, Exhys.WebContestHost.Communication.SubmissionRouter.ISubmissionService {
        
        public SubmissionServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public SubmissionServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public SubmissionServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SubmissionServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SubmissionServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public System.Guid Submit(Exhys.SubmissionRouter.Dtos.SubmissionDto submission) {
            return base.Channel.Submit(submission);
        }
        
        public System.Threading.Tasks.Task<System.Guid> SubmitAsync(Exhys.SubmissionRouter.Dtos.SubmissionDto submission) {
            return base.Channel.SubmitAsync(submission);
        }
        
        public void Ping() {
            base.Channel.Ping();
        }
        
        public System.Threading.Tasks.Task PingAsync() {
            return base.Channel.PingAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SubmissionRouter.IExecutionService", CallbackContract=typeof(Exhys.WebContestHost.Communication.SubmissionRouter.IExecutionServiceCallback))]
    public interface IExecutionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExecutionService/Register", ReplyAction="http://tempuri.org/IExecutionService/RegisterResponse")]
        System.Guid Register();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExecutionService/Register", ReplyAction="http://tempuri.org/IExecutionService/RegisterResponse")]
        System.Threading.Tasks.Task<System.Guid> RegisterAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IExecutionService/Unregister")]
        void Unregister(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IExecutionService/Unregister")]
        System.Threading.Tasks.Task UnregisterAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IExecutionService/SubmitResult")]
        void SubmitResult(System.Guid executionProcessId, Exhys.SubmissionRouter.Dtos.ExecutionResultDto executionResult);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IExecutionService/SubmitResult")]
        System.Threading.Tasks.Task SubmitResultAsync(System.Guid executionProcessId, Exhys.SubmissionRouter.Dtos.ExecutionResultDto executionResult);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExecutionServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IExecutionService/SubmissionProcessed")]
        void SubmissionProcessed(Exhys.SubmissionRouter.Dtos.SubmissionResultDto result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IExecutionService/Pong")]
        void Pong();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExecutionServiceChannel : Exhys.WebContestHost.Communication.SubmissionRouter.IExecutionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExecutionServiceClient : System.ServiceModel.DuplexClientBase<Exhys.WebContestHost.Communication.SubmissionRouter.IExecutionService>, Exhys.WebContestHost.Communication.SubmissionRouter.IExecutionService {
        
        public ExecutionServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ExecutionServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ExecutionServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ExecutionServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ExecutionServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public System.Guid Register() {
            return base.Channel.Register();
        }
        
        public System.Threading.Tasks.Task<System.Guid> RegisterAsync() {
            return base.Channel.RegisterAsync();
        }
        
        public void Unregister(System.Guid id) {
            base.Channel.Unregister(id);
        }
        
        public System.Threading.Tasks.Task UnregisterAsync(System.Guid id) {
            return base.Channel.UnregisterAsync(id);
        }
        
        public void SubmitResult(System.Guid executionProcessId, Exhys.SubmissionRouter.Dtos.ExecutionResultDto executionResult) {
            base.Channel.SubmitResult(executionProcessId, executionResult);
        }
        
        public System.Threading.Tasks.Task SubmitResultAsync(System.Guid executionProcessId, Exhys.SubmissionRouter.Dtos.ExecutionResultDto executionResult) {
            return base.Channel.SubmitResultAsync(executionProcessId, executionResult);
        }
    }
}
