@model ParticipationViewModel

<script type="text/javascript">

    //setInterval(refreshSubmissions,5000);

    function refreshSubmissions() {
        var scroll = $(window).scrollTop();
        $('#submissions-list').load('@Url.Action("ListSubmissions", "Participation")?participationId=@Model.Id', function () {
        });
        setTimeout("$(window).scrollTop(scroll);", 1000);
    }
</script>

@if (Model != null && Model.Competition != null)
{
	<h2 class="text-center">@Model.Competition.Name</h2>
}


<br />
@*Problem List*@
<div class="form-group">
	<section style="float:left" class="col-lg-4">
		<fieldset>
			<legend>Problems</legend>
			<table class="table-bordered table">

				<tbody>
					@for (int i = 0; i < Model.Competition.Problems.Count; i++)
                    {
						<tr>
							<th>@Model.Competition.Problems[i].Name</th>
							<td>
								@for (int j = 0; j < Model.Competition.Problems[i].ProblemStatements.Count; j++)
                                {
									<div class="padding-0">
										@using (Html.BeginForm(method: FormMethod.Get, actionName: "DownloadStatement", controllerName: "Participation"))
                                        {
											<input type="hidden" name="id" value="@Model.Competition.Problems[i].ProblemStatements[j].Id" />
											<button type="submit" class="btn btn-link height-25px padding-0">@Model.Competition.Problems[i].ProblemStatements[j].Filename.Split('\\').Last()</button>
                                        }
									</div>
                                }
							</td>
						</tr>
                    }
				</tbody>
			</table>
		</fieldset>
	</section>


	@*Submission*@
	<section style="padding-left:1cm;">
		@using (Html.BeginForm(actionName: "SubmitSolution", controllerName: "Participation", method: FormMethod.Post, htmlAttributes: new { }))
        {
            var vm = new ProblemSolutionViewModel();

			<fieldset>
				<legend>Submit a Solution</legend>
				<div class="form-group">
					@Html.LabelFor(m => vm.ProblemId, "Problem")
					@Html.FixedDropDownListFor(m => vm.ProblemId, ViewData.GetProblemOptions(), new { @class = "form-control" })
				</div>

				<div class="form-group">
					@Html.LabelFor(m => vm.SourceCode, "Source Code")
					@Html.TextAreaFor(m => vm.SourceCode, new { placeholder = "//Hello, World!", @class = "form-control input-lg", id = "inputLarge" })
				</div>

				<div class="form-group">
					@Html.LabelFor(m => vm.LanguageAlias, "Language")
					@Html.FixedDropDownListFor(m => vm.LanguageAlias, ViewData.GetProgrammingLanguageOptions(), new { @class = "form-control" })
				</div>

				<div class="form-group">
					<button class="btn btn-primary" type="submit">Submit Solution</button>
					<button class="btn btn-default" type="reset">Reset</button>
				</div>
			</fieldset>
        }

	</section>
</div>

	<br /><br /><br />
    <span id="submissions-list">
        @{Html.RenderAction(actionName: "ListSubmissions", controllerName: "Participation", routeValues: new { participationId = Model.Id });}
    </span>
	
<br /><br /><br />
<br /><br /><br />